# System Prerequisites for MQTT Image Capture and Receiver

1. **Python 3.x**
   - Ensure Python 3.x is installed on your system. Python 3.6 or later is recommended.
   - If not install using

sudo apt update
sudo apt install python3
python3 --version

2. **pip (Python Package Installer)**
   - `pip` should be included with Python 3.x. Verify installation with:
     ```bash
     sudo apt install python3-pip
     pip --version
     ```
  

3. **fswebcam**
   - `fswebcam` is used to capture images from a webcam.
   - On Debian-based systems (e.g., Ubuntu), install `fswebcam` with:
     ```bash
     sudo apt-get update
     sudo apt-get install fswebcam
     ```
   - For other operating systems, consult the [fswebcam documentation](https://github.com/fsphil/fswebcam) for installation instructions.

4. **MQTT Broker Access**
   - The scripts use the MQTT broker at `broker.hivemq.com`. Ensure you have access to this broker or modify the script to use a different broker if necessary.

5. **Virtual Environment (Optional but Recommended)**
   
- Ensure Python 3.x is installed on your system.
- Thonny IDE installed.

## Setting Up a Virtual Environment

1. **Open Terminal**:
   - On Linux/macOS: Open Terminal.
   - On Windows: Open Command Prompt or PowerShell.

2. **Navigate to Your Project Directory**:
   ```sh
   cd /path/to/your/project
   ```

3. **Create a Virtual Environment**:
   ```sh
   python3 -m venv myenv
   ```
   This will create a directory named `myenv` in your project directory.

4. **Activate the Virtual Environment**:
   - On Linux/macOS:
     ```sh
     source myenv/bin/activate
     ```
   - On Windows:
     ```sh
     myenv\Scripts\activate
     ```

5. **Install Required Packages**:
   ```sh
   pip install paho-mqtt
   ```

6. **Verify Installation**:
   ```sh
   pip list
   ```
   Ensure `paho-mqtt` is listed among the installed packages.

## Configuring Thonny to Use the Virtual Environment

1. **Open Thonny**.

2. **Open Thonny's Settings**:
   - Click on "Tools" in the menu bar.
   - Select "Options" (or "Preferences").

3. **Select the Interpreter Tab**:
   - Go to the "Interpreter" tab.

4. **Configure the Interpreter**:
   - Select "Alternative Python 3 interpreter".
   - Click on "Select interpreter ".
   - Navigate to your virtual environment and select the Python interpreter located at:
     - `myenv/bin/python3` on Linux/macOS.
     - `myenv\Scripts\python.exe` on Windows.

5. **Apply and Restart Thonny**:
   - Click "OK" or "Apply" to save the changes.
   - Restart Thonny to ensure the changes take effect.

## Running Your Script in Thonny

1. **Open Your Script in Thonny**:
   - Open `mqtt_image_publisher.py` or any other script you wish to run.

2. **Run the Script**:
   - Click on the "Run" button or press `F5`.

3. **Verify Environment in Thonny**:
   - Open Thonny's interactive shell.
   - Type the following commands to check the Python path and installed packages:
     ```python
     import sys
     sys.executable
     ```
     This should point to your virtual environment's Python executable.

     ```python
     !pip list
     ```
     Ensure `paho-mqtt` is listed among the installed packages.

By following these steps, you should have a fully configured virtual environment and Thonny IDE setup to use it.



6. **Check Your MQTT Broker Configuration**
   - Ensure that your MQTT broker configuration in the scripts (`broker = 'broker.hivemq.com'` and `topic = 'image'`) matches your setup. Adjust these settings as needed based on your MQTT broker.

By following these prerequisites, you will prepare your system to run the MQTT image capture and receiver scripts effectively.
